pot2(k: Inteiro, p: BigInt) = BigInt(2).pow(k) - (p + 1)

a = leia_textos(" ")
n = a[1].inteiro
var p, h := BigInt(a[2]) - 1 , BigInt(a[3]) - 1

w = para k de n até 1 passo -1 gere
  c = pot2(k - 1, h) <= -1
  se c então h := pot2(k, h) fim 
  c
fim

V, F = verdadeiro, falso
saida = para k de n até 1 passo -1 gere
  pk1 = pot2(k - 1, p)
  p := escolha (w[k], pk1 >= 0)
    caso (V, V) => pk1           # L
    caso (F, F) => -(pk1 + 1)    # L
    caso (V, F) => pot2(k, p)    # R
    caso (F, V) => p             # R
  fim
  se w[k] == (pk1 >= 0) então 'L' senão 'R' fim
fim.junte("")

escreva saida
